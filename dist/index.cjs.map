{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { BuildOptions, OutputFile, Plugin, PluginBuild } from \"esbuild\";\nimport { mkdir, writeFile } from \"fs/promises\";\nimport path from \"path\";\n\n/**\n * Esbuild plugin to convert TypeScript to JSON format.\n */\nexport function esbuildTsToJson(): Plugin {\n  return {\n    name: \"esbuild-plugin-ts-to-json\",\n    setup(build: PluginBuild) {\n      build.onEnd(async (result) => {\n        validateBuildOptions(build.initialOptions);\n\n        if (!result?.outputFiles?.length) {\n          throw new Error(\"No output files found. Ensure your esbuild config is properly set.\");\n        }\n\n        await Promise.all(result.outputFiles.map(transformFileToJson));\n      });\n    },\n  };\n}\n\nasync function transformFileToJson(file: OutputFile) {\n  const { dir, name } = path.parse(file.path);\n  const outputFilePath = path.resolve(dir, `${name}.json`);\n\n  try {\n    const moduleURI = `data:text/javascript,${encodeURIComponent(file.text)}`;\n    const { default: exportedData = {} } = await import(moduleURI);\n\n    // Serialize the default export to JSON\n    const jsonContent = JSON.stringify(exportedData, null, 2);\n\n    // Write JSON file to disk\n    await mkdir(path.dirname(outputFilePath), { recursive: true });\n    await writeFile(outputFilePath, jsonContent);\n  } catch (error) {\n    console.error(`Failed to process ${file.path}:`, error);\n  }\n}\n\nfunction validateBuildOptions({ write, bundle, format }: BuildOptions) {\n  if (write) {\n    throw new Error(\n      `esbuild config: \"write\" must be set to false. Add \"write: false\" to your config.`\n    );\n  }\n\n  if (!bundle) {\n    throw new Error(\n      `esbuild config: \"bundle\" must be set to true. Add \"bundle: true\" to your config.`\n    );\n  }\n\n  if (format !== \"esm\") {\n    throw new Error(\n      `esbuild config: \"format\" must be set to \"esm\". Add \"format: 'esm'\" to your config.`\n    );\n  }\n}\n"],"mappings":"0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,qBAAAE,IAAA,eAAAC,EAAAH,GACA,IAAAI,EAAiC,uBACjCC,EAAiB,qBAKV,SAASH,GAA0B,CACxC,MAAO,CACL,KAAM,4BACN,MAAMI,EAAoB,CACxBA,EAAM,MAAM,MAAOC,GAAW,CAG5B,GAFAC,EAAqBF,EAAM,cAAc,EAErC,CAACC,GAAQ,aAAa,OACxB,MAAM,IAAI,MAAM,oEAAoE,EAGtF,MAAM,QAAQ,IAAIA,EAAO,YAAY,IAAIE,CAAmB,CAAC,CAC/D,CAAC,CACH,CACF,CACF,CAEA,eAAeA,EAAoBC,EAAkB,CACnD,GAAM,CAAE,IAAAC,EAAK,KAAAC,CAAK,EAAI,EAAAC,QAAK,MAAMH,EAAK,IAAI,EACpCI,EAAiB,EAAAD,QAAK,QAAQF,EAAK,GAAGC,CAAI,OAAO,EAEvD,GAAI,CACF,IAAMG,EAAY,wBAAwB,mBAAmBL,EAAK,IAAI,CAAC,GACjE,CAAE,QAASM,EAAe,CAAC,CAAE,EAAI,MAAM,OAAOD,GAG9CE,EAAc,KAAK,UAAUD,EAAc,KAAM,CAAC,EAGxD,QAAM,SAAM,EAAAH,QAAK,QAAQC,CAAc,EAAG,CAAE,UAAW,EAAK,CAAC,EAC7D,QAAM,aAAUA,EAAgBG,CAAW,CAC7C,OAASC,EAAO,CACd,QAAQ,MAAM,qBAAqBR,EAAK,IAAI,IAAKQ,CAAK,CACxD,CACF,CAEA,SAASV,EAAqB,CAAE,MAAAW,EAAO,OAAAC,EAAQ,OAAAC,CAAO,EAAiB,CACrE,GAAIF,EACF,MAAM,IAAI,MACR,kFACF,EAGF,GAAI,CAACC,EACH,MAAM,IAAI,MACR,kFACF,EAGF,GAAIC,IAAW,MACb,MAAM,IAAI,MACR,oFACF,CAEJ","names":["src_exports","__export","esbuildTsToJson","__toCommonJS","import_promises","import_path","build","result","validateBuildOptions","transformFileToJson","file","dir","name","path","outputFilePath","moduleURI","exportedData","jsonContent","error","write","bundle","format"]}