import{mkdir as m,readFile as f,stat as g,writeFile as w}from"fs/promises";import r from"path";import{ModuleKind as y,ModuleResolutionKind as F,ScriptTarget as P,transpileModule as T}from"typescript";var h={compilerOptions:{module:y.ESNext,moduleResolution:F.Bundler,target:P.ES2017}};function R(){return{name:"esbuild-plugin-ts-to-json",setup(t){t.onEnd(async()=>{let{outdir:i="./build",entryPoints:o}=t.initialOptions;if(!Array.isArray(o))throw new Error("entryPoints must be an array of strings.");for(let n of o){if(typeof n!="string")throw new Error(`Invalid entry point format: ${n}`);let e=r.resolve(n),a=r.parse(n).name+".json",u=r.resolve(i,a);try{await g(e);let s=await f(e,"utf8"),{outputText:l}=T(s,h),p=`data:text/javascript,${encodeURIComponent(l)}`,{default:c={}}=await import(p),d=JSON.stringify(c,null,2);await v(u,d)}catch(s){console.error(`Failed to process ${e}:`,s)}}})}}}async function v(t,i){let o=r.dirname(t);await m(o,{recursive:!0}),await w(t,i)}export{R as esbuildTsToJson};
//# sourceMappingURL=index.js.map