import{mkdir as f,readFile as g,stat as w,writeFile as l}from"fs/promises";import r from"path";import{ModuleKind as y,ModuleResolutionKind as F,ScriptTarget as P,transpileModule as h}from"typescript";import{pathToFileURL as T}from"url";var O={compilerOptions:{module:y.ESNext,moduleResolution:F.Bundler,target:P.ES2017}};function B(){return{name:"esbuild-plugin-ts-to-json",setup(t){t.onEnd(async()=>{let{outdir:e="./build",entryPoints:o}=t.initialOptions;if(!Array.isArray(o))throw new Error("entryPoints must be an array of strings.");for(let i of o){if(typeof i!="string")throw new Error(`Invalid entry point format: ${i}`);let n=r.resolve(i),u=r.parse(i).name+".json",p=r.resolve(e,u);try{await w(n);let s=await g(n,"utf8"),{outputText:d}=h(s,O),a=n+".js";await l(a,d);let c=(await import(T(a).toString())).default,m=JSON.stringify(c,null,2);await E(p,m)}catch(s){console.error(`Failed to process ${n}:`,s)}}})}}}async function E(t,e){let o=r.dirname(t);await f(o,{recursive:!0}),await l(t,e)}export{B as esbuildTsToJson};
//# sourceMappingURL=index.js.map